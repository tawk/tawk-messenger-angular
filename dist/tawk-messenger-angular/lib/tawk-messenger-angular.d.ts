import { RendererFactory2 } from "@angular/core";
import * as i0 from "@angular/core";
export declare class TawkMessengerAngular {
    private rendererFactory;
    protected platformId: Object;
    private document;
    private renderer;
    constructor(rendererFactory: RendererFactory2, platformId: Object, document: any);
    init(data: any): void;
    private loadScript;
    start(): void;
    shutdown(): void;
    hideWidget(): void;
    showWidget(): void;
    maximize(): void;
    minimize(): void;
    toggle(): void;
    popup(): void;
    toggleVisibility(): void;
    endChat(): void;
    getWindowType(): string;
    getStatus(): string;
    isChatMaximized(): boolean;
    isChatMinimized(): boolean;
    isChatHidden(): boolean;
    isChatOngoing(): boolean;
    isVisitorEngaged(): boolean;
    onLoaded(): void;
    onBeforeLoaded(): void;
    widgetPosition(): void;
    visitor(data: any): any;
    setAttributes(attribute: object, callback: (error?: string | null) => void): void;
    addEvent(event: string[], metadata: any, callback: (error?: any | null) => void): void;
    addTags(tags: string[], callback: (error?: string | null) => void): void;
    removeTags(tags: string[], callback: (error?: string | null) => void): void;
    switchWidget(data: object, callback: () => void): void;
    customStyle(customStyle?: object | undefined): object | undefined;
    onLoad(callback?: any): void;
    onStatusChange(callback?: any): void;
    onBeforeLoad(callback?: any): void;
    onChatMaximized(callback?: any): void;
    onChatMinimized(callback?: any): void;
    onChatHidden(callback?: any): void;
    onChatStarted(callback?: any): void;
    onChatEnded(callback?: any): void;
    onPrechatSubmit(callback?: any): void;
    onOfflineSubmit(callback?: any): void;
    onChatMessageVisitor(callback?: any): void;
    onChatMessageAgent(callback?: any): void;
    onChatMessageSystem(callback?: any): void;
    onAgentJoinChat(callback?: any): void;
    onAgentLeaveChat(callback?: any): void;
    onChatSatisfaction(callback?: any): void;
    onVisitorNameChanged(callback?: any): void;
    onFileUpload(callback?: any): void;
    onTagsUpdated(callback?: any): void;
    onUnreadCountChanged(callback?: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TawkMessengerAngular, [null, null, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<TawkMessengerAngular>;
}
